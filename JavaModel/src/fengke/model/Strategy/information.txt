

简单代理模式与策略模式在功能上的很大的区别是： 
		
		简单代理模式中，代理类知道被代理类的行为，因为代理类与被代理类实现的是同一个接口，因此代理类与被代理类的结构是相同的；
		
		而策略模式中，策略容器并不知道内部策略的详细信息，因为容器并没有实现与内部策略相同的接口，即容器与内部策略只是简单的组合关系，
		容器只是将内部策略的行为抽取出来，进行了统一的实现。
		
		策略模式：
				多个类只区别在表现行为不同，可以使用Strategy模式，在运行时动态选择具体要执行的行为。
				从面向对象的角度，简单来说，是一种 基于接口  ，或者叫 抽象  的编程，一些主要的逻辑或者说流程，可以将他们高度抽象化，
				然后交给具体的某个类去实现，就是说，我为了实现某种功能，可以通过不同的方式去完成，也就是在此所谓的“策略”。
				就好比天热了，可以扇扇子，也可以扇电扇，或者开空调，它们这几种方式目的都是差不多的，目的上或许稍微有些差别，
				但影响不大，都是为了“凉快”，只是用了不同的“ 策略  ”。 例子：基于接口编程的方式
				
		
	         代理模式:
	         	对其他对象提供一种代理以控制对这个对象的访问
	         	代理的作用就是本来一些可能在生产商或者客户之间需要完成的东西，可以转移到代理这个环节上来。反应到面向对象上来可以说是在A类或者B类上
	         	可能需要处理的东西，现在可以交给联系他们两者关系的 桥梁 C类，也就是所谓的代理来完成。